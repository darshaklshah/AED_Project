/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.government;

import business.HealthSystem;
import Business.Analysis.Entry;
import business.organization.GovernmentAnalyst;
import business.organization.Organization;
import java.awt.Color;
import java.awt.GradientPaint;
import java.util.HashSet;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryLabelPositions;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author darshak
 */
public class RegionJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RegionJPanel
     */
    private HashSet<Entry> entrySet;
    private JFreeChart chart;
    public RegionJPanel(HashSet<Entry> entrySet) {
        initComponents();
        this.entrySet = entrySet;
        
        displayChart();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    /**
     * Step 3, display the chart
     * Notice, in order to make swing display the chart, make sure you set the panel to BorderLayout
     */
    private void displayChart() {
        this.chart = createChart(createDataset(entrySet));
        ChartPanel chartPanel = new ChartPanel(chart);  //Create a ChartPanel based on JFreeChart in order to display in Swing
        this.add(chartPanel);
        this.validate();    //call this method to re-paint the JPanel
    }
    
    /**
     * Visualization step 1, create the dataset for visualization
     * @param countryDirectory
     * @return 
     */
    private CategoryDataset createDataset(HashSet<Entry> entryList) {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        for(Entry e : entryList) {
            String name = e.getTitle();
            
            
            //Use addValue method to manipulate the values to display on the chart
            //Please look into API doc to find out more about addValue method
            dataset.addValue(e.getQuantity(), name, name);
        }
        return dataset;
    }
    
    /**
     * Visualization step 2, configure the chart
     * @param dataset
     * @return 
     */
    private JFreeChart createChart(CategoryDataset dataset) {

        // create the chart...
        //Please take a look at API doc to see other available charts
        JFreeChart c = ChartFactory.createBarChart(
            "Region Chart",       // chart title
            "Region",               // domain axis label
            "Number",                  // range axis label
            dataset,                  // data
            PlotOrientation.VERTICAL, // orientation
            true,                     // include legend
            true,                     // tooltips?
            false                     // URLs?
        );

        // NOW DO SOME OPTIONAL CUSTOMISATION OF THE CHART...

        // set the background color for the chart...
        c.setBackgroundPaint(Color.white);

        // get a reference to the plot for further customisation...
        CategoryPlot plot = (CategoryPlot) c.getPlot();

        // ******************************************************************
        //  More than 150 demo applications are included with the JFreeChart
        //  Developer Guide...for more information, see:
        //
        //  >   http://www.object-refinery.com/jfreechart/guide.html
        //
        // ******************************************************************

        // set the range axis to display integers only...
        NumberAxis rangeAxis = (NumberAxis) plot.getRangeAxis();
        rangeAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());

        // disable bar outlines...
        BarRenderer renderer = (BarRenderer) plot.getRenderer();
        renderer.setDrawBarOutline(false);

        // set up gradient paints for series...
        // You can choose not to set up gradient paint, JFreeChart will setup the default color for you
        GradientPaint gp0 = new GradientPaint(0.0f, 0.0f, Color.blue,
                0.0f, 0.0f, new Color(0, 0, 64));
        GradientPaint gp1 = new GradientPaint(0.0f, 0.0f, Color.green,
                0.0f, 0.0f, new Color(0, 64, 0));
        GradientPaint gp2 = new GradientPaint(0.0f, 0.0f, Color.red,
                0.0f, 0.0f, new Color(64, 0, 0));
        renderer.setSeriesPaint(0, gp0);
        renderer.setSeriesPaint(1, gp1);
        renderer.setSeriesPaint(2, gp2);

        CategoryAxis domainAxis = plot.getDomainAxis();
        domainAxis.setCategoryLabelPositions(
                CategoryLabelPositions.createUpRotationLabelPositions(
                        Math.PI / 6.0));
        // OPTIONAL CUSTOMISATION COMPLETED.

        return c;

    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
