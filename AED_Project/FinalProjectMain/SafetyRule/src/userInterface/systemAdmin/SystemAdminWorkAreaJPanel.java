/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.systemAdmin;

import business.HealthSystem;
import business.enterprise.Enterprise;
import business.enterprise.Government;
import business.network.Network;
import business.person.Person;
import business.role.AdminRole;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author darshak
 */
public class SystemAdminWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SystemAdminWorkAreaJPanel
     */
    private JPanel container;
    private HealthSystem system;
    
    public SystemAdminWorkAreaJPanel(JPanel container,HealthSystem system) {
        initComponents();
        this.container = container;
        this.system = system;
        
        popTree();
        popCountryComboBox();
        
        popEnCountryComboBox();
        popEnterpriseTypeComboBox();
        popGovComboBox();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        manageJTabbedPane = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        countryJTextField = new javax.swing.JTextField();
        stateJTextField = new javax.swing.JTextField();
        cityJTextField = new javax.swing.JTextField();
        countryJComboBox = new javax.swing.JComboBox();
        stateJComboBox = new javax.swing.JComboBox();
        cityJComboBox = new javax.swing.JComboBox();
        addCountryJButton = new javax.swing.JButton();
        addStateJButton = new javax.swing.JButton();
        addCityJButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        enCountryJComboBox = new javax.swing.JComboBox();
        enStateJComboBox = new javax.swing.JComboBox();
        enCityJComboBox = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        enterpriseNameJTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        enterpriseTypeJComboBox = new javax.swing.JComboBox();
        createEnterpriseJButton = new javax.swing.JButton();
        meaJButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        govJComboBox = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        personNameJTextField = new javax.swing.JTextField();
        usernameJTextField = new javax.swing.JTextField();
        passwordJTextField = new javax.swing.JTextField();
        registerJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        networkJTree = new javax.swing.JTree();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("System Admin Work Area");

        manageJTabbedPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        manageJTabbedPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel2.setText("Country");

        jLabel3.setText("State");

        jLabel4.setText("City");

        countryJComboBox.setToolTipText("");
        countryJComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                countryJComboBoxItemStateChanged(evt);
            }
        });

        stateJComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                stateJComboBoxItemStateChanged(evt);
            }
        });

        addCountryJButton.setText("Add");
        addCountryJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCountryJButtonActionPerformed(evt);
            }
        });

        addStateJButton.setText("Add");
        addStateJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStateJButtonActionPerformed(evt);
            }
        });

        addCityJButton.setText("Add");
        addCityJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCityJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(countryJComboBox, 0, 135, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(stateJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cityJComboBox, 0, 135, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(countryJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addCountryJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(stateJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addStateJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cityJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addCityJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(96, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(countryJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(countryJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addCountryJButton))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(stateJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stateJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addStateJButton))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cityJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cityJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addCityJButton))
                .addContainerGap(281, Short.MAX_VALUE))
        );

        manageJTabbedPane.addTab("Manage Network", jPanel2);

        jLabel5.setText("Country");

        jLabel6.setText("State");

        jLabel7.setText("City");

        enCountryJComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                enCountryJComboBoxItemStateChanged(evt);
            }
        });

        enStateJComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                enStateJComboBoxItemStateChanged(evt);
            }
        });

        jLabel8.setText("Enterprise Name");

        jLabel9.setText("Enterprise Type");

        enterpriseTypeJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        createEnterpriseJButton.setText("Create");
        createEnterpriseJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createEnterpriseJButtonActionPerformed(evt);
            }
        });

        meaJButton.setText("Manage Enterprise Admin");
        meaJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meaJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(meaJButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(enterpriseNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(enCountryJComboBox, 0, 155, Short.MAX_VALUE)
                                    .addComponent(enStateJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(enCityJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(enterpriseTypeJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(createEnterpriseJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(137, 137, 137)))
                        .addGap(80, 309, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(enCountryJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(enStateJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(enCityJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(enterpriseNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(enterpriseTypeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(createEnterpriseJButton)
                .addGap(59, 59, 59)
                .addComponent(meaJButton)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        manageJTabbedPane.addTab("Manage Enterprise", jPanel1);

        govJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel10.setText("Country");

        jLabel11.setText("User Name");

        jLabel12.setText("Password");

        jLabel13.setText("Person Name");

        registerJButton.setText("Register");
        registerJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(registerJButton)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(govJComboBox, 0, 195, Short.MAX_VALUE)
                            .addComponent(personNameJTextField)
                            .addComponent(usernameJTextField)
                            .addComponent(passwordJTextField))))
                .addContainerGap(246, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(govJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(usernameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(passwordJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(personNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addComponent(registerJButton)
                .addContainerGap(143, Short.MAX_VALUE))
        );

        manageJTabbedPane.addTab("Manage Government Admin", jPanel3);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Health System");
        networkJTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane1.setViewportView(networkJTree);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(manageJTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(manageJTabbedPane)
                    .addComponent(jScrollPane1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        manageJTabbedPane.getAccessibleContext().setAccessibleDescription("");
    }// </editor-fold>//GEN-END:initComponents

    private void addCountryJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCountryJButtonActionPerformed
        // TODO add your handling code here:
        if(countryJTextField.getText().trim().isEmpty()||countryJTextField.getText()==null){
            JOptionPane.showMessageDialog(null, "Input country");
            return;
        }
        Network country = system.createAndAddNetwork(countryJTextField.getText());
        if(country==null){
            JOptionPane.showMessageDialog(null, "Country's name already exist.");
            return;
        }
        popCountryComboBox();

//        popCountryComboBox();
        popEnCountryComboBox();
        popGovComboBox();
        popTree();
        countryJTextField.setText("");
        countryJComboBox.setSelectedItem(country);
        cityJComboBox.removeAllItems();
    }//GEN-LAST:event_addCountryJButtonActionPerformed

    private void countryJComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_countryJComboBoxItemStateChanged
        // TODO add your handling code here:
        int index = countryJComboBox.getSelectedIndex();
        if(index!=0&&index!=-1){
            Network country = (Network) countryJComboBox.getSelectedItem();
            popStateComboBox(country);
        }
        
    }//GEN-LAST:event_countryJComboBoxItemStateChanged

    private void stateJComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_stateJComboBoxItemStateChanged
        // TODO add your handling code here:
        int index = stateJComboBox.getSelectedIndex();
        if(index!=0&&index!=-1){
            Network state = (Network) stateJComboBox.getSelectedItem();
            popCityComboBox(state);
        }
    }//GEN-LAST:event_stateJComboBoxItemStateChanged

    private void addStateJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStateJButtonActionPerformed
        // TODO add your handling code here:
        if(stateJTextField.getText().trim().isEmpty()||countryJComboBox.getSelectedItem().equals("")
                ||stateJTextField.getText()==null){
            JOptionPane.showMessageDialog(null, "Input state ,select country");
            return;
        }
        Network country = (Network) countryJComboBox.getSelectedItem();
        Network state = country.createNetwork(stateJTextField.getText());
        if(state==null){
            JOptionPane.showMessageDialog(null, "State's name already exist.");
            return;
        }

        popStateComboBox(country);
        popTree();
        stateJTextField.setText("");
        stateJComboBox.setSelectedItem(state);
    }//GEN-LAST:event_addStateJButtonActionPerformed

    private void addCityJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCityJButtonActionPerformed
        // TODO add your handling code here:
        if(cityJTextField.getText().trim().isEmpty()||stateJComboBox.getSelectedItem().equals("")
                ||countryJComboBox.getSelectedItem().equals("")||cityJTextField.getText()==null){
            JOptionPane.showMessageDialog(null, "Input city ,select state, select country");
            return;
        }
        Network state = (Network) stateJComboBox.getSelectedItem();
        Network city = state.createNetwork(cityJTextField.getText());
        if(city==null){
            JOptionPane.showMessageDialog(null, "City's name already exist.");
            return;
        }
        popCityComboBox(state);
        popTree();
        cityJTextField.setText("");
        cityJComboBox.setSelectedItem(city);
    }//GEN-LAST:event_addCityJButtonActionPerformed

    private void enCountryJComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_enCountryJComboBoxItemStateChanged
        // TODO add your handling code here:
        int index = enCountryJComboBox.getSelectedIndex();
        if(index!=0&&index!=-1){
            Network country = (Network)enCountryJComboBox.getSelectedItem();
            popEnStateComboBox(country);
            
        }
    }//GEN-LAST:event_enCountryJComboBoxItemStateChanged

    private void enStateJComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_enStateJComboBoxItemStateChanged
        // TODO add your handling code here:
        int index = enStateJComboBox.getSelectedIndex();
        if(index!=0&&index!=-1){
            Network state = (Network) enStateJComboBox.getSelectedItem();
            popEnCityComboBox(state);
        }
    }//GEN-LAST:event_enStateJComboBoxItemStateChanged

    private void createEnterpriseJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createEnterpriseJButtonActionPerformed
        // TODO add your handling code here:
        if(enterpriseNameJTextField.getText().trim().isEmpty()||enterpriseNameJTextField.getText()==null){
            JOptionPane.showMessageDialog(null, "Input enterprise name");
            return;
        }
        int index1 = enCountryJComboBox.getSelectedIndex();
        int index2 = enStateJComboBox.getSelectedIndex();
        int index3 = enCityJComboBox.getSelectedIndex();
        Enterprise.EnterpriseType type = (Enterprise.EnterpriseType)enterpriseTypeJComboBox.getSelectedItem();
        if(index1!=0&&index1!=-1&&index2!=0&&index2!=-1&&index3!=0&&index3!=-1&&type!=null){
            Network city =(Network) enCityJComboBox.getSelectedItem();
            city.createEnterprise(enterpriseNameJTextField.getText(), type);
        }else{
            JOptionPane.showMessageDialog(null, "Select the combo box!");
        }
        popTree();
        enterpriseNameJTextField.setText("");
        
    }//GEN-LAST:event_createEnterpriseJButtonActionPerformed

    private void meaJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meaJButtonActionPerformed
        // TODO add your handling code here:
        ManageEnterpriseAdminJPanel meaj = new ManageEnterpriseAdminJPanel(container, system);
        container.add("manageEnterpriseAdminJPanel", meaj);

        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_meaJButtonActionPerformed

    private void registerJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerJButtonActionPerformed
        // TODO add your handling code here:
        Network country = (Network)govJComboBox.getSelectedItem();
        if(country == null){
            JOptionPane.showMessageDialog(null, "No country selected!");
            return;
        }
        
        String userName = usernameJTextField.getText();
        String password = passwordJTextField.getText();
        String personName = personNameJTextField.getText();
        if(userName.trim().isEmpty()||password.trim().isEmpty()||personName.trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Input information");
            return;
        }
        
        if(system.checkAllUnique(userName)){
            Person person = country.getGov().getPersonDirectory().createPerson(personName);
            country.getGov().getUserAccountDirectory().createUserAccount(userName, password, person, new AdminRole());
        }else{
            JOptionPane.showMessageDialog(null, "User name is occupied");
        }
        
        usernameJTextField.setText("");
        passwordJTextField.setText("");
        personNameJTextField.setText("");
        
    }//GEN-LAST:event_registerJButtonActionPerformed

    private void popCountryComboBox(){
        countryJComboBox.removeAllItems();
        countryJComboBox.addItem("");
        for(Network country: system.getNetworkList()){
            countryJComboBox.addItem(country);
        }
    }
    
    private void popStateComboBox(Network country){
        stateJComboBox.removeAllItems();
        stateJComboBox.addItem("");
//        try{
            for(Network state: country.getNetworkList()){
            stateJComboBox.addItem(state);
            }
//        }catch(NullPointerException ex){
//            JOptionPane.showMessageDialog(null, "Add new country!");
//        }
        
    }
    
    private void popCityComboBox(Network state){
        cityJComboBox.removeAllItems();
        cityJComboBox.addItem("");
//        try{
            for(Network city:state.getNetworkList()){
            cityJComboBox.addItem(city);
            }
//        }catch(NullPointerException ex){
//            JOptionPane.showMessageDialog(null, "Add new state!");
//        }
        
    }
    
    private void popEnCountryComboBox(){
        enCountryJComboBox.removeAllItems();
        enCountryJComboBox.addItem("");
        for(Network country: system.getNetworkList()){
            enCountryJComboBox.addItem(country);
        }
    }
    
    private void popEnStateComboBox(Network country){
        enStateJComboBox.removeAllItems();
        enStateJComboBox.addItem("");
        for(Network state: country.getNetworkList()){
            enStateJComboBox.addItem(state);
        }
    }
    
    private void popEnCityComboBox(Network state){
        enCityJComboBox.removeAllItems();
        enCityJComboBox.addItem("");
        for(Network city: state.getNetworkList()){
            enCityJComboBox.addItem(city);
        }
    }
    
    private void popEnterpriseTypeComboBox(){
        enterpriseTypeJComboBox.removeAllItems();
        for(Enterprise.EnterpriseType type : Enterprise.EnterpriseType.values()){
            enterpriseTypeJComboBox.addItem(type);
        }
    }
    
    private void popGovComboBox(){
        govJComboBox.removeAllItems();
        for(Network country:system.getNetworkList()){
            govJComboBox.addItem(country);
        }
    }
    
    private void popTree(){
        
        DefaultTreeModel model = (DefaultTreeModel) networkJTree.getModel();
        DefaultMutableTreeNode root =(DefaultMutableTreeNode) model.getRoot();
        
        DefaultMutableTreeNode globle = new DefaultMutableTreeNode("Globle");
        root.removeAllChildren();
        root.insert(globle, 0);
        
        ArrayList<Network> networkList = system.getNetworkList();
        for(int i = 0;i<networkList.size();i++){
            Network country = networkList.get(i);
            //create network node
            DefaultMutableTreeNode countryNode = new DefaultMutableTreeNode(country.getName());
            globle.insert(countryNode, i);
            
            for(int j = 0; j<country.getNetworkList().size();j++){
                Network state = country.getNetworkList().get(j);
                DefaultMutableTreeNode stateNode = new DefaultMutableTreeNode(state.getName());
                countryNode.insert(stateNode, j);
                
                for(int k = 0; k<state.getNetworkList().size();k++){
                    Network city = state.getNetworkList().get(k);
                    DefaultMutableTreeNode cityNode = new DefaultMutableTreeNode(city.getName());
                    stateNode.insert(cityNode, k);
                    
                    for(int m = 0;m<city.getEnterpriseList().size();m++){
                        Enterprise e = city.getEnterpriseList().get(m);
                        DefaultMutableTreeNode enterpriseNode = new DefaultMutableTreeNode(e.getName());
                        cityNode.insert(enterpriseNode, m);
                    }
                }
            }
        }
        //reload the tree
        model.reload();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCityJButton;
    private javax.swing.JButton addCountryJButton;
    private javax.swing.JButton addStateJButton;
    private javax.swing.JComboBox cityJComboBox;
    private javax.swing.JTextField cityJTextField;
    private javax.swing.JComboBox countryJComboBox;
    private javax.swing.JTextField countryJTextField;
    private javax.swing.JButton createEnterpriseJButton;
    private javax.swing.JComboBox enCityJComboBox;
    private javax.swing.JComboBox enCountryJComboBox;
    private javax.swing.JComboBox enStateJComboBox;
    private javax.swing.JTextField enterpriseNameJTextField;
    private javax.swing.JComboBox enterpriseTypeJComboBox;
    private javax.swing.JComboBox govJComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane manageJTabbedPane;
    private javax.swing.JButton meaJButton;
    private javax.swing.JTree networkJTree;
    private javax.swing.JTextField passwordJTextField;
    private javax.swing.JTextField personNameJTextField;
    private javax.swing.JButton registerJButton;
    private javax.swing.JComboBox stateJComboBox;
    private javax.swing.JTextField stateJTextField;
    private javax.swing.JTextField usernameJTextField;
    // End of variables declaration//GEN-END:variables
}
