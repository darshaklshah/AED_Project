/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.pso;

import business.HealthSystem;
import business.enterprise.Enterprise;
import business.organization.Organization;
import business.organization.PSOValidationTeam;
import business.userAccount.UserAccount;
import business.workQueue.ReportWorkRequest;
import business.workQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author darshak
 */
public class PSOValidationWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PSOValidationWorkAreaJPanel
     */
    private JPanel container;
    private UserAccount userAccount;
    private Organization organization;
    private Enterprise enterprise;
    private HealthSystem system;
    
    public PSOValidationWorkAreaJPanel(JPanel container,UserAccount userAccount,
            Organization organization,Enterprise enterprise,HealthSystem system) {
        initComponents();
        this.container = container;
        this.userAccount = userAccount;
        this.organization = organization;
        this.enterprise = enterprise;
        this.system = system;
        
        cityJLabel.setText(enterprise.findNetwork(system, enterprise).get(2).getName());
        popTableData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    private void popTableData(){
        int rowCount = viewReportJTable.getRowCount();
        for(int i=rowCount-1; i>=0; i--){
            ((DefaultTableModel)viewReportJTable.getModel()).removeRow(i);
        }

        for(WorkRequest wr: ((PSOValidationTeam)organization).getReceiveReport().getWorkRequestList()){
            Object row[] = new Object[3];
            row[0] = wr;
            row[1] = wr.getSender();
            row[2] = ((ReportWorkRequest)wr).getReport();
            ((DefaultTableModel)viewReportJTable.getModel()).addRow(row);  
        }
    }
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cityJLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        viewReportJTable = new javax.swing.JTable();
        showJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("PSO Validation Team Work Area");

        cityJLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cityJLabel.setText("<<City>>");

        viewReportJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Status", "Sender", "Event ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(viewReportJTable);

        showJButton.setText("Show Detail");
        showJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showJButtonActionPerformed(evt);
            }
        });

        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 218, Short.MAX_VALUE))
                    .addComponent(jScrollPane3)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(showJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cityJLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(refreshJButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityJLabel)
                    .addComponent(refreshJButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(showJButton)
                .addContainerGap(94, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        // TODO add your handling code here:
        popTableData();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void showJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showJButtonActionPerformed
        int selectedRow = viewReportJTable.getSelectedRow();
        if(selectedRow>=0){
            WorkRequest wr = (WorkRequest)viewReportJTable.getValueAt(selectedRow, 0);
            wr.setStatus(WorkRequest.PENDING);
            CensorJPanel cjp = new CensorJPanel(container,userAccount,organization,enterprise,system,wr);
            container.add("CensorJPanel", cjp);
            CardLayout layout = (CardLayout) container.getLayout();
            layout.next(container);
        }else{
            JOptionPane.showConfirmDialog(null,"select one row please","Warning",
                    JOptionPane.YES_NO_OPTION);
        }
    }//GEN-LAST:event_showJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cityJLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JButton showJButton;
    private javax.swing.JTable viewReportJTable;
    // End of variables declaration//GEN-END:variables
}
